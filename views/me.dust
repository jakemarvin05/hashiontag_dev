{>blockHeader/}
<link href="{p.css}/me.css" rel="stylesheet">
<link href="{p.css}/search.css" rel="stylesheet">
<script src="{p.js}/streamFactory.js"></script>
{?renderJSONraw.isOwnProfile}
<script>
if ( window.location.href.substring(window.location.href.lastIndexOf('/')).indexOf("me") > -1) {
    try {
        window.history.replaceState('', '', window.location.href.substring(0, window.location.href.lastIndexOf('/')) + '/' + printHead.userHeaders.userNameDisp);
    } catch (err) {}
}
</script>
{/renderJSONraw.isOwnProfile}
{>blockHeaderAfterHook/}
<section id="main">

    <header class="profileHeader">
        {?renderJSONraw.isOwnProfile}
        <div data-vel="normalDisplay">
            {?renderJSONraw.hasStarTag}
            <a href="{p.absPath}/startag">
                <div class="profileSettingsWrap" id="profileSettingsStar" class="clickable">
                    <div class="glyphicon glyphicon-star"></div>
                </div>
            </a>
            {/renderJSONraw.hasStarTag}
            <a href="{p.absPath}/settings">
                <div class="profileSettingsWrap" id="profileSettingsCog" class="clickable">
                    <div class="icon-cog"></div>
                </div>
            </a>
        </div>
        {/renderJSONraw.isOwnProfile}


        <div id="thumbnailScrollerWrap" style="display:none;">
            <div id="thumbnailScroller" class="clearfix">
            </div>
        </div>

        <div class="profilePictureCont">
            {?renderJSONraw.profilePicture}
            <img src="{p.mediaDir}/{renderJSONraw.profilePicture}-half.jpg" data-imgid="{renderJSONraw.profilePicture}">
            <!-- this is only for the purpose of generating image for future, doesn't absolve broken links for the user now. -->
            <script>VV.utils.imageGetter("{renderJSONraw.profilePicture}", "half");</script>
            {:else}
            <img src="{f.errProfilePic}">
            {/renderJSONraw.profilePicture}
        </div>

        <div class="profileDetails" data-vel="normalDisplay">

            <div class="profileUserNameDisp">
                @{renderJSONraw.userNameDisp}
            </div>

            <div class="profileInfoInlines">
                {?renderJSONraw.name}
                <div class="profileFullName convert-emoji">
                    <span data-form="name">{renderJSONraw.name}</span>
                </div>
                {/renderJSONraw.name}

                {?renderJSONraw.gender}
                <div class="profileGender">
                    <span data-form="gender">{renderJSONraw.gender}</span>
                </div>
                {/renderJSONraw.gender}

                {! email is compulsory so no condition required !}
                <div class="profileEmail">
                    <span class="glyphicon glyphicon-envelope"></span><span data-form="email">{renderJSONraw.email}</span>
                </div>

                {?renderJSONraw.country}
                <div class="profileCountry">
                    <span class="glyphicon glyphicon-map-marker"></span><span data-form="country">{renderJSONraw.country}</span>
                </div>
                {/renderJSONraw.country}

                {?renderJSONraw.web}
                <div class="profileWeb">
                    <a id="profileWebLink" href="{renderJSONraw.web}" target="_blank" rel="nofollow">
                        <span class="glyphicon glyphicon-link"></span><span data-form="web">{renderJSONraw.web}</span>
                    </a>
                    <script>
                    VV.utils.ensureLink($('#profileWebLink'));
                    </script>
                </div>
                {/renderJSONraw.web}

            </div>

            <div class="profileAbout convert-emoji">
                {?renderJSONraw.about}
                    "{renderJSONraw.about}"
                {:else}
                    "No description yet..."
                {/renderJSONraw.about}
            </div>

            {?renderJSONraw.isOwnProfile}
            <button id="editProfileButton" class="darkButton">Edit Profile</button>
            {/renderJSONraw.isOwnProfile}

        </div><!-- Profile Details -->
        {?renderJSONraw.isOwnProfile}
        <!-- Edit Form -->
        <div class="profileEditForm" style="display:none;" data-vel="editDisplay">
            <div class="profileEditClickToChange">
                <div id="profileEditPicText" class="clickable">
                    <span class="glyphicon glyphicon-chevron-up"></span>
                    <p>click to change profile photo</p>
                </div>
                <div class="profileEditPicButtons">
                    <div id="profileEditPicOk">
                        <span class="glyphicon glyphicon-ok-circle"></span>
                    </div>
                    <div id="profileEditPicCancel">
                        <span class="glyphicon glyphicon-remove-circle"></span>
                    </div>
                </div>
            </div>

            <form id="profileInputs">
                <div class="profileInputsName">
                    <label>Name</label><input type="text" name="name" id="name" value="{renderJSONraw.name}" placeholder="Your name" data-orgin="{renderJSONraw.name}">
                </div>
                <div class="profileInputsName">
                    <label>Gender</label>
                    <select name="gender" id="gender" data-origin="{renderJSONraw.gender}">
                        <option value="" selected>-- choose gender --</option>
                        <option value="female">Female</option>
                        <option value="male">Male</option>
                    </select>
                    <script>
                        var $g = $('#gender'); 
                        if($g.attr('data-origin')) {
                            $g.find('option[value="{renderJSONraw.gender}"]').attr('selected', 'selected');
                        }
                    </script>
                </div>
                <div class="profileInputsEmail">
                    <label>E-mail</label><input type="text" name="email" id="email" value="{renderJSONraw.email}" placeholder="you cannot leave this blank..." required  data-orgin="{renderJSONraw.email}">
                </div>

                <div class="profileInputsWeb">
                    <label>Web/Blog</label><input type="text" name="web" id="web" value="{renderJSONraw.web}" placeholder="-- empty --" data-orgin="{renderJSONraw.web}">
                </div>

                <div class="profileInputsCount">
                    <label> Country </label><select name="country" id="country" data-orgin="{renderJSONraw.country}"></select>
                    <script src="{p.js}/commons/listOfCountries.js"></script>
                    <script>selectCountry('country', '{renderJSONraw.country}');</script>
                </div>
                <div class="profileInputsAbout">
                    <label> About </label><textarea name="about" id="about"  data-orgin="{renderJSONraw.about}">{renderJSONraw.about}</textarea><br/>
                    <script>
                        VV.utils.tooLong($('textarea[name="about"]'), {
                            msg: "We're sorry but your input is too long. Please shorten it :)",
                            limit: 250
                        });
                    </script>
                </div>
                <div class="profileInputsButtons">
                
                    <button id="updateProfileButton" class="darkButton" type="submit"><span class="glyphicon glyphicon-ok"></span></button>

                    <button id="cancelButton" class="darkButton"><span class="glyphicon glyphicon-remove"></span></button>
                </div>
            </form>
        </div>
        {/renderJSONraw.isOwnProfile}


        <div class="profileRelationship" data-vel="normalDisplay">

            <!-- Post count -->
            <div class="postBlock profileFollowBlock profileFollowBlockClickable followBlockActive" data-action="posts" data-bindto="postsBlock">
                <div class="vaDiv"></div>
                <div class="profileFollowWrap">
                    <div class="profileFollowHdr">
                        Posts
                    </div>
                    <div class="profileFollowCount" id="profileFollowersCount">
                        {! TODO!! change this to post count. !}
                        {renderJSONraw.followerCount}
                    </div>
                </div>
            </div>

            
            {?hasShop}
            <div class="profileFollowBlock profileFollowBlockClickable" data-action="shop" data-bindto="shopBlock">
                <div class="vaDiv"></div>
                <div class="profileFollowWrap">
                    <div class="profileFollowHdr">
                        Shop
                    </div>
                    <div class="profileFollowCount" id="productCount">
                        {?renderJSONraw.productCount}
                            {renderJSONraw.productCount}
                        {:else}
                            0
                        {/renderJSONraw.productCount}
                    </div>
                </div>
            </div>
            {/hasShop}

            <div class="profileFollowBlock{@if cond="{renderJSONraw.followerCount} > 0"}  profileFollowBlockClickable{/if}" data-action="findFollowers" data-bindto="followerList">
                <div class="vaDiv"></div>
                <div class="profileFollowWrap">
                    <div class="profileFollowHdr">
                        Followers
                    </div>
                    <div class="profileFollowCount" id="profileFollowersCount">
                        {renderJSONraw.followerCount}
                    </div>
                </div>
            </div>

            <div class="profileFollowBlock{@if cond="{renderJSONraw.followingCount} > 0"}  profileFollowBlockClickable{/if}" data-action="findFollowings" data-bindto="followingList">
                <div class="vaDiv"></div>
                <div class="profileFollowWrap">
                    <div class="profileFollowHdr">
                        Following
                    </div>
                    <div class="profileFollowCount" id="profileFollowingCount">
                        {renderJSONraw.followingCount}
                    </div>
                </div>
            </div>

            {?renderJSONraw.isFollowable}
            <div class="profileFollowButtonCont profileFollowBlock">
                <div class="vaDiv"></div>
                <div class="profileFollowWrap">
                    {?renderJSONraw.targetFollowedViewer}
                        <div class="profileFollowText">
                            @{renderJSONraw.userNameDisp} is following you.
                        </div>
                    {/renderJSONraw.targetFollowedViewer}
                    <div class="profileFollowButtonDiv">
                        {?renderJSONraw.viewerFollowedTarget}
                            <button class="darkButton" id="profileFollowButton" data-action="unfollow" data-uid="{renderJSONraw.userId}" {?renderJSONraw.targetFollowedViewer}data-follow="follow back"{/renderJSONraw.targetFollowedViewer}>unfollow</button>
                            {:else}
                            <button class="darkButton" id="profileFollowButton" data-action="follow" data-uid="{renderJSONraw.userId}"  {?renderJSONraw.targetFollowedViewer}data-follow="follow back"{/renderJSONraw.targetFollowedViewer}>
                                {?renderJSONraw.targetFollowedViewer}
                                    follow back
                                {:else}
                                    follow
                                {/renderJSONraw.targetFollowedViewer}
                            </button>
                        {/renderJSONraw.viewerFollowedTarget}
                    </div>
                </div>
            </div>
            {/renderJSONraw.isFollowable}
        </div>
        <div style="height: 0px; position: relative; top: -3px;" class="loading"></div>
    </header>
    <div class="profilePostLower" data-vel="normalDisplay">

        <div id="postsBlock" class="profileContentBlock profilePostsBlock clearfix">
            {>"layouts/profilePostsLayout"/}
        </div>

        {! Following/Followers display !}
        
        <div id="followerList" class="profileContentBlock profileFollowUsersBlock" style="display:none;">
            {>"layouts/searchLayout"/}
        </div>

        <div id="followingList" class="profileContentBlock profileFollowUsersBlock" style="display:none;">
            {>"layouts/searchLayout"/}
        </div>


        {! Shop Display !}

        {?hasShop}
        <div id="shopBlock" class="profileContentBlock profilePostsBlock" style="display:none;">
        {?renderJSONraw.isOwnProfile}
            <a href="{p.shopSettings}">
                <button type="button" class="darkButton shopButtons">Shop settings</button>
            </a>
            <a href="{p.addProduct}" target="_blank">
                <button type="button" class="darkButton shopButtons" name="addProduct">Add product</button>
            </a>
            
            <button type="button" class="darkButton shopButtons">Manage inventory</button>
            <button type="button" class="darkButton shopButtons">Manage sales orders</button>
        {/renderJSONraw.isOwnProfile}
            <input type="text" class="search fuzzy-search" name="search" placeholder="Type to search...">
            <div class="shopBlockCont">
                {>"layouts/profilePostsLayout"/}
            </div>
        </div>
        {/hasShop}
    </div>

</section><!-- main -->

{! This is used to contain the fancybox popup duplicate  !}
<div id="fancyboxCont" style="display:none;">
    <article class="fancyArticle"></article>
</div>
{>blockFooter/}

<script src='{p.js}/pagescripts/me-core.js'></script>

{?renderJSONraw.isOwnProfile}

<script src="{p.js}/jquery.validate.min.js"></script>
<script src="{p.js}/pagescripts/me-editprofile.js"></script>
{/renderJSONraw.isOwnProfile}

<!-- list.js library -->
<script src="{p.js}/list.js"></script>
</body>
</html>
