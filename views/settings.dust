{>blockHeader/}
<link href="{p.css}/me.css" rel="stylesheet">
<style>
.settingsCont {
    padding: 20px;
    border-bottom: 1px solid #ccc;
}
    .changePasswordTbl { 
        text-align: left;
        vertical-align: center;
        height: 45px;
        width: 350px;
    }
    @media (min-width: 0px) and (max-width: 480px) {
        .changePasswordTbl { 
            width: 290px;
        }
    }
.instagramActiveP {
    background-color: #ccc;
    width: auto;
    padding: 5px;
    margin-bottom: 30px;
}
.instagramPP img {
    height: 150px;
    width: 150px;
}
.instagramSNameWrap {
    font-weight: bold;
    margin-bottom: 5px;
}
.instagramConfirm {
    margin-top: 10px;
}
@media (min-width: 0px) and (max-width: 540px) {
    .instagramCenterWhenMobile {
        text-align: center;
    }
    #instagramFindProfile {
        display: block!important;
        margin: auto;
    }
}
</style>
{>blockHeaderAfterHook/}

<section id="main">
    <header>
        <div class="noticePad">
            <h1>Settings</h1>
        </div>
    </header>
    <div class="settingsWrap">

        <div class="settingsCont">
            <h2>Change password</h2>
            <form id="changePassword">
                <table class="changePasswordTbl">
                    <thead>
                        <tr>
                            <td></td>
                            <td style="text-align: center;">
                                <button type="button" style="height: 28px;font-size: 10px;" class="darkButton" id="showPassword">Show Password</button>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                Current password:
                            </td>
                            <td>
                                <input type="password" id="currPwd" name="currPwd" placeholder="Type in your current password..">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                New password:
                            </td>
                            <td>
                                <input type="password" id="newPwd" name="newPwd" placeholder="Your new password">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Type your new password again:&nbsp;
                            </td>
                            <td>
                                <input type="password" name="newPwdR" placeholder="Type in your current password..">
                            </td>
                        </tr>
                        <tr>
                            <td class="errHolder" colspan="2" style="text-align:center; display:none; height: auto;"></td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <button id="changePasswordButton" class="darkButton">Change password</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        </div>

        <div class="settingsCont">
                <h2>Retrieve and re-post my Instagrams</h2>
                <p>We can automatically retrieve and re-post your Instagrams onto Vogue and Verve.</p>

                <p>Just tag <strong>@vogueverve</strong> or hashtag <strong>#vogueverve</strong> in your Instagram for us to grab it.</p>

                <div class="instagramCenterWhenMobile">
                    <button class="darkButton" id="instagramUnlink" class="instagramActiveP instagramCenterWhenMobile" {?renderJSONraw.instagramLink}{:else}style="display:none;"{/renderJSONraw.instagramLink}>Unlink my Instagram</button>
                </div>
                
                <p class="instagramActiveP instagramCenterWhenMobile" {?renderJSONraw.instagramLink}{:else}style="display:none;"{/renderJSONraw.instagramLink}>
                    <span class="glyphicon glyphicon-ok-circle"></span><span style="text-decoration: underline;">Your active Instagram screenname is:</span> <b>@<span id="instagramLinkedName">{renderJSONraw.instagramLink}</span></b>
                    <br>
                </p>
                
            <form id="instagramLink">    
                <p class="instagramCenterWhenMobile">
                    Find Instagram screenname:
                    <br>
                    <input type="text" name="instaScreenName" placeholder="screenname" required><br>
                </p>

                <div class="instagramResultBlock instagramCenterWhenMobile" style="display:none;">
                    <div class="instagramPP"></div>
                    <div class="instagramNames">
                        <div class="instagramSNameWrap">
                            @<span class="instagramSName"></span>
                        </div>
                        <span class="instagramFullName convert-emoji"></span>
                    </div>
                </div> 

                <button id="instagramFindProfile" class="darkButton" type="submit" disabled>Find profile</button>
            </form>

                <div class="instagramConfirm instagramCenterWhenMobile" style="display:none">
                    <button class="darkButton" id="instagramConfirm">Confirm</button>
                    <button id="instagramSearchAgain" class="darkButton" id="instagramSearchAgain">Search Again</button>
                    <button class="darkButton" id="instagramCancel">Cancel</button>
                </div>
                <p class="instagramCenterWhenMobile"><span class="glyphicon glyphicon-exclamation-sign"></span> Your account may face suspension if we discover that you attempt to link an Instagram account that is not yours.</p> 
            
        </div>

    </div>

</section><!-- main -->

{>blockFooter/}
<script src="{p.js}/jquery.validate.min.js"></script>

<!-- start change password -->
<script>
$('#showPassword').click(function(e) {
    e.preventDefault();
    $('#changePassword input').each(function(i, el) {
        var type = $(el).attr('type');
        if(type === "password") {
            $(el).attr('type', 'text');
        } else {
            $(el).attr('type', 'password');
        }
    });
});
$('#changePassword').validate({
    rules: {
        currPwd: {
            required: true
        },
        newPwd: {
            required: true,
            minlength: 6,
            notEqual: '#currPwd'
        },
        newPwdR: {
            required: true,
            equalTo: '#newPwd'
        }
    },
    messages: {
        currPwd: {
            required: '',
        },
        newPwd: {
            minlength: 'Please use a password with at least 6 characters.',
            required: '',
            notEqual: 'Please select a different new password.'
        },
        newPwdR: {
            equalTo: 'Your passwords do not match. Please re-enter.',
            required: ''
        }
    },
    errorPlacement: function(error, element) {
        element.velocity('callout.shakeShort');
        $('#changePassword').find('.errHolder').append(error).show();
    },
    submitHandler: function() {
        var $form = $('#changePassword');
        var submitFlasher = Object.create(VV.utils.Flasher);
        var $button = $form.find('button[type="submit"]');

        //start flasher
        submitFlasher.run($button, 'button');
        
        //reset any errors
        //var $eHW = $('#signupForm').find('.errHolder');
        //$eHW.velocity('transition.slideUpOut', 200);

        
        // Get some values from elements on the page:
        var data = $form.serialize();

        var uri = printHead.p.absPath + '/api/changepassword';

        // Send the data using post
        var posting = $.post(uri, data);
        //done
        posting.done(function(data) {
            if(data.success) { 
                //console.log('success');
                var text = '<span style="color:green; font-size: 18px;" class="glyphicon glyphicon-ok-circle"></span> ';
                    text += 'Your password change is successful. Returning you back to profile page.';
                aF.protoAlert({
                    title: "Password changed",
                    text: text
                });
                return setTimeout(function() {
                    window.location.href = printHead.p.absPath + '/me';
                }, 2000);
            }

            if(data.error) {
                if(data.error === "password") {
                    aF.protoAlert('Your password is incorrect.');
                }
                aF.protoAlert('Something went wrong. Please refresh and try again. If this persist, please contact us and we will help you!');
                $button.velocity('callout.shakeShort');
                submitFlasher.kill();
            }
        });

        //fail
        posting.fail(function() {
                submitFlasher.kill();
                aF.protoAlert('Something went wrong, please check your connection and try again later.');
        });

    }
});
</script>


<!-- instagram link -->
<script>
var instaAjax;
$('#instagramLink').validate({
    rules: {
        instaScreenName: {
            required: true,
            minlength: 5,
            regex: '^[a-zA-Z0-9_@.]*$'
        }
    },
    messages: {
        instaScreenName: {
            required: '',
            minlength: 'Please provide a valid Instagram username',
            regex: 'Please provide a valid Instagram username'
        }
    },
    errorPlacement: function(error, element) {
        element.velocity('callout.shakeShort');
        error.insertAfter(element);
    },
    submitHandler: function() {

        var $form = $('#instagramLink'),
            $findProfile = $('#instagramFindProfile'),
            $searchAgain = $('#instagramSearchAgain'),
            $confirmDiv = $('.instagramConfirm');

        var searched = ($form.attr('data-searched') === "true") ? true : false;

        var flasher = Object.create(VV.utils.Flasher);
        var flasher2 = Object.create(VV.utils.Flasher);
        
        if(!searched) { 
            flasher.run($findProfile, 'button'); 
        } else {
            flasher2.run($searchAgain, 'button');
            $('.instagramResultBlock').velocity('fadeOut');
        }
        
        // Get some values from elements on the page:
        var screenName = $('input[name="instaScreenName"]').val();

        url = printHead.p.absPath + '/api/instagram/getuser';

        // Send the data using post
        instaAjax = $.post(url, {screenName: screenName});
        
        //done
        instaAjax.done(function(data) {
            console.log(data);
            if(data.success) {
                instaBuilder.build(data.user)
                if(!searched) {
                    $form.attr('data-searched', 'true');
                    flasher.kill(function($el) {
                        $el.velocity('transition.slideLeftOut', 200, function() {
                            $confirmDiv.velocity('transition.slideRightIn');
                        });
                    });
                } else {
                    flasher2.kill();
                    $confirmDiv.find('button').removeAttr('disabled', 'disabled');
                }
            } else {
                alertFactory.protoAlert('Oops! An unknown error has occured! Please refresh and try again.');
                flasher.kill();
                flasher2.kill();
            }
        });
        //fail
        instaAjax.fail(function(err) {
            if(err.statusText === 'abort') { return false; }
            alertFactory.protoAlert('Please either login or check your internet connection.');
            flasher.kill();
            flasher2.kill();
        });
    }
});

$('#instagramSearchAgain').click(function(e) {
    e.preventDefault();
    var $buttons = $('#instagramLink button');
    $buttons.attr('disabled', 'disabled');
    $('#instagramLink').submit();
});

$('#instagramConfirm').click(function(e) {
    e.preventDefault();
    var flasher = Object.create(VV.utils.Flasher);
    flasher.run($(this), 'button');
    var $originSName = $('#instagramLinkedName');
    var data = instaBuilder.get();
    var newScreenName = data.screenName.toLowerCase();


    var originSName = $originSName.html().toLowerCase();
    if(newScreenName === originSName) { 
        return $('#instagramCancel').click(); 
    }
    
    

    instaConfirmAjax = $.post(printHead.p.absPath + '/api/instagram/link', data);
    instaConfirmAjax.done(function(data) {
        flasher.kill();

        if(data.success) {
            var text = '<span style="color:green; font-size: 18px;" class="glyphicon glyphicon-ok-circle"></span> ';
                text += 'Your instagram is now linked!';
            aF.protoAlert(text);
            $('#instagramCancel').click(); 
            setTimeout(function() {
                $.fancybox.close();
            }, 1000);
            $('.instagramActiveP').show();
            $('#instagramUnlink').show();

            return $originSName.html(newScreenName);
        }

        aF.protoAlert('Something went wrong, please try again...');
    });

    instaConfirmAjax.fail(function() {
        flasher.kill()
        aF.protoAlert('Something went wrong, please try again...');
    });

});

$('#instagramCancel').click(function(e) {
    e.preventDefault();
    var $findProfile = $('#instagramFindProfile'),
        $confirmDiv = $('.instagramConfirm'),
        $screenNameInput = $('input[name="instaScreenName"]');

    $screenNameInput.val('');

    $('#instagramLink').removeAttr('data-searched');

    $confirmDiv.velocity('transition.slideRightOut', 200, function() {
        $findProfile.velocity('transition.slideLeftIn', 200);
        instaBuilder.clear();
    });

});

$('#instagramUnlink').click(function(e) {
    e.preventDefault();

    e.preventDefault();
    var flasher = Object.create(VV.utils.Flasher);
    flasher.run($(this), 'button');

    instaUnlinkAjax = $.post(printHead.p.absPath + '/api/instagram/unlink', {});
    instaUnlinkAjax.done(function(data) {
        flasher.kill(function($el) { 
            $el.hide();
        });
        if(data.success) {
            var text = '<span style="color:green; font-size: 18px;" class="glyphicon glyphicon-ok-circle"></span> ';
                text += 'Your instagram is now unlinked!';
            aF.protoAlert(text);

            setTimeout(function() {
                $.fancybox.close();
            }, 1000);
            $('.instagramActiveP').hide();
            return $('#instagramLinkedName').html('');
        }

        aF.protoAlert('Something went wrong, please try again...');
    });

    instaUnlinkAjax.fail(function() {
        flasher.kill()
        aF.protoAlert('Something went wrong, please try again...');
    });

})


var instaBuilder = {

    //prepare selectors for instagramBlock
    $instaBlock: $('.instagramResultBlock'),
    $instaPP: $('.instagramPP'),
    $instaSName: $('.instagramSName'),
    $instaFName: $('.instagramFullName'),

    build: function(user) {
        var img = new Image();
        img.src = user.profile_picture;

        this.$instaPP.html(img);
        this.$instaSName.html(user.username);
        this.$instaFName.html(user.full_name);
        this.$instaBlock.attr('data-instaid', user.id);
        this.$instaBlock.velocity('fadeIn');

        if(typeof convertEmoji === "function") { convertEmoji(); }
    },
    clear: function() {
        var self = this;
        this.$instaBlock.velocity('fadeOut', 200, function() {
            self.$instaPP.html('');
            self.$instaSName.html('');
            self.$instaFName.html('');
        }); 
    },
    get: function() {
        return data = {
            screenName: this.$instaSName.html(),
            instaId: this.$instaBlock.attr('data-instaid')
        }
    }
}
</script>
<!-- end instagram link -->
</body>
</html>
